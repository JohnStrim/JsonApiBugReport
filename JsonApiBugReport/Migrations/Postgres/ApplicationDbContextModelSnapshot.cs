// <auto-generated />
using System;
using JsonApiBugReport.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JsonApiBugReport.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JsonApiBugReport.Data.PriceGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PriceGroups");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AllowOrder")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("CopyProductId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<int>("Discriminator")
                        .HasColumnType("integer")
                        .HasColumnName("Discriminator");

                    b.Property<string>("FullDescription")
                        .HasColumnType("text");

                    b.Property<bool>("IsAddon")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAddon");

                    b.Property<bool>("IsBundle")
                        .HasColumnType("boolean")
                        .HasColumnName("IsBundle");

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<int>("IsProductGroup")
                        .HasColumnType("integer")
                        .HasColumnName("IsProductGroup");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PriceGroupId")
                        .HasColumnType("uuid");

                    b.Property<int?>("ScreenshotLinkEnabled")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text");

                    b.Property<string>("SupportOptions")
                        .HasColumnType("text");

                    b.Property<int?>("UnitGroupId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UnitGroupId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Products", t =>
                        {
                            t.HasTrigger("TR_tblProduct_Deleted");

                            t.HasTrigger("TR_tblProduct_Insert");
                        });

                    b.HasDiscriminator();

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("JsonApiBugReport.Data.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Duration")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Mnemonic")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(32, 10)
                        .HasColumnType("numeric(32,10)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.UnitGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("UnitGroups");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsApiUser")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSystemAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.CommonProduct", b =>
                {
                    b.HasBaseType("JsonApiBugReport.Data.ProductBase");

                    b.Property<int>("IsTaxable")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ProductGroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("PriceGroupId");

                    b.HasIndex("ProductGroupId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductGroup", b =>
                {
                    b.HasBaseType("JsonApiBugReport.Data.ProductBase");

                    b.Property<int?>("IncludeAllProducts")
                        .HasColumnType("integer");

                    b.HasIndex("CopyProductId");

                    b.HasIndex("PriceGroupId");

                    b.ToTable("Products");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductBundle", b =>
                {
                    b.HasBaseType("JsonApiBugReport.Data.CommonProduct");

                    b.HasIndex("CopyProductId");

                    b.ToTable("Products");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("JsonApiBugReport.Data.StandaloneProduct", b =>
                {
                    b.HasBaseType("JsonApiBugReport.Data.CommonProduct");

                    b.Property<bool>("AllowsCustomEndDate")
                        .HasColumnType("boolean");

                    b.Property<int?>("TrialDuration")
                        .HasColumnType("integer");

                    b.Property<int?>("TrialNo")
                        .HasColumnType("integer");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.Product", b =>
                {
                    b.HasBaseType("JsonApiBugReport.Data.StandaloneProduct");

                    b.Property<bool?>("SupportsMonthlyBillingFrequency")
                        .HasColumnType("boolean");

                    b.HasIndex("CopyProductId");

                    b.ToTable("Products");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductAddon", b =>
                {
                    b.HasBaseType("JsonApiBugReport.Data.StandaloneProduct");

                    b.HasIndex("CopyProductId");

                    b.ToTable("Products");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("JsonApiBugReport.Data.PriceGroup", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JsonApiBugReport.Data.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductBase", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("JsonApiBugReport.Data.UnitGroup", "UnitGroup")
                        .WithMany()
                        .HasForeignKey("UnitGroupId");

                    b.HasOne("JsonApiBugReport.Data.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("UnitGroup");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.Unit", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.UnitGroup", "Parent")
                        .WithMany("Units")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.UnitGroup", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("JsonApiBugReport.Data.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.CommonProduct", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.PriceGroup", "PriceGroup")
                        .WithMany("Products")
                        .HasForeignKey("PriceGroupId");

                    b.HasOne("JsonApiBugReport.Data.ProductGroup", "ProductGroup")
                        .WithMany("Products")
                        .HasForeignKey("ProductGroupId");

                    b.Navigation("PriceGroup");

                    b.Navigation("ProductGroup");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductGroup", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.ProductGroup", "CopyOf")
                        .WithMany()
                        .HasForeignKey("CopyProductId");

                    b.HasOne("JsonApiBugReport.Data.PriceGroup", "PriceGroup")
                        .WithMany()
                        .HasForeignKey("PriceGroupId");

                    b.Navigation("CopyOf");

                    b.Navigation("PriceGroup");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductBundle", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.ProductBundle", "CopyOf")
                        .WithMany()
                        .HasForeignKey("CopyProductId");

                    b.Navigation("CopyOf");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.Product", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.Product", "CopyOf")
                        .WithMany()
                        .HasForeignKey("CopyProductId");

                    b.Navigation("CopyOf");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductAddon", b =>
                {
                    b.HasOne("JsonApiBugReport.Data.ProductAddon", "CopyOf")
                        .WithMany()
                        .HasForeignKey("CopyProductId");

                    b.Navigation("CopyOf");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.PriceGroup", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.UnitGroup", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("JsonApiBugReport.Data.ProductGroup", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
